<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="{{ config.package }}.mapper.UserMapper">
    
    <resultMap id="BaseResultMap" type="{{ config.package }}.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, username, email, password, created_at, updated_at
    </sql>
    
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    
    <select id="selectAll" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from user
        order by id desc
    </select>
    
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    
    <insert id="insert" parameterType="{{ config.package }}.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (username, email, password, created_at, updated_at)
        values (#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
                #{password,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
                #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    
    <update id="updateByPrimaryKey" parameterType="{{ config.package }}.entity.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            updated_at = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    
</mapper>