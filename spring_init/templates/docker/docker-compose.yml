version: '3.8'

services:
  # 应用服务
  {{ config.name | snake_case }}:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: {{ config.name | snake_case }}-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST={{ config.tech_stack.database }}
      - DB_USERNAME={{ config.name | snake_case }}_user
      - DB_PASSWORD=your_password_here
{% if 'redis' in config.tech_stack.cache %}
      - REDIS_HOST=redis
{% endif %}
{% if 'rabbitmq' in config.tech_stack.mq %}
      - RABBITMQ_HOST=rabbitmq
{% endif %}
{% if 'kafka' in config.tech_stack.mq %}
      - KAFKA_SERVERS=kafka:9092
{% endif %}
{% if 'mongodb' in config.tech_stack.nosql %}
      - MONGODB_URI=mongodb://mongodb:27017/{{ config.name | snake_case }}_prod
{% endif %}
{% if 'elasticsearch' in config.tech_stack.nosql %}
      - ELASTICSEARCH_URIS=http://elasticsearch:9200
{% endif %}
    volumes:
      - ./logs:/var/log/{{ config.name }}
      - ./uploads:/var/uploads/{{ config.name }}
    depends_on:
{% if config.tech_stack.database == 'mysql' %}
      - mysql
{% elif config.tech_stack.database == 'postgresql' %}
      - postgres
{% endif %}
{% if 'redis' in config.tech_stack.cache %}
      - redis
{% endif %}
{% if 'rabbitmq' in config.tech_stack.mq %}
      - rabbitmq
{% endif %}
{% if 'kafka' in config.tech_stack.mq %}
      - kafka
{% endif %}
{% if 'mongodb' in config.tech_stack.nosql %}
      - mongodb
{% endif %}
{% if 'elasticsearch' in config.tech_stack.nosql %}
      - elasticsearch
{% endif %}
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

{% if config.tech_stack.database == 'mysql' %}
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: {{ config.name | snake_case }}-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE={{ config.name | snake_case }}_prod
      - MYSQL_USER={{ config.name | snake_case }}_user
      - MYSQL_PASSWORD=your_password_here
      - MYSQL_ROOT_HOST=%
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% elif config.tech_stack.database == 'postgresql' %}
  # PostgreSQL数据库
  postgres:
    image: postgres:13
    container_name: {{ config.name | snake_case }}-postgres
    environment:
      - POSTGRES_DB={{ config.name | snake_case }}_prod
      - POSTGRES_USER={{ config.name | snake_case }}_user
      - POSTGRES_PASSWORD=your_password_here
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% endif %}

{% if 'redis' in config.tech_stack.cache %}
  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: {{ config.name | snake_case }}-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% endif %}

{% if 'rabbitmq' in config.tech_stack.mq %}
  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: {{ config.name | snake_case }}-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% endif %}

{% if 'kafka' in config.tech_stack.mq %}
  # Zookeeper (Kafka依赖)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: {{ config.name | snake_case }}-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped

  # Kafka消息队列
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: {{ config.name | snake_case }}-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% endif %}

{% if 'mongodb' in config.tech_stack.nosql %}
  # MongoDB数据库
  mongodb:
    image: mongo:5
    container_name: {{ config.name | snake_case }}-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE={{ config.name | snake_case }}_prod
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% endif %}

{% if 'elasticsearch' in config.tech_stack.nosql %}
  # Elasticsearch搜索引擎
  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: {{ config.name | snake_case }}-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped

  # Kibana (可选)
  kibana:
    image: kibana:7.17.0
    container_name: {{ config.name | snake_case }}-kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - {{ config.name | snake_case }}-network
    restart: unless-stopped
{% endif %}

# 网络配置
networks:
  {{ config.name | snake_case }}-network:
    driver: bridge

# 数据卷配置
volumes:
{% if config.tech_stack.database == 'mysql' %}
  mysql_data:
{% elif config.tech_stack.database == 'postgresql' %}
  postgres_data:
{% endif %}
{% if 'redis' in config.tech_stack.cache %}
  redis_data:
{% endif %}
{% if 'rabbitmq' in config.tech_stack.mq %}
  rabbitmq_data:
{% endif %}
{% if 'kafka' in config.tech_stack.mq %}
  kafka_data:
{% endif %}
{% if 'mongodb' in config.tech_stack.nosql %}
  mongodb_data:
{% endif %}
{% if 'elasticsearch' in config.tech_stack.nosql %}
  elasticsearch_data:
{% endif %}