# 生产环境配置
server:
  port: 8080
  tomcat:
    max-threads: 500
    max-connections: 10000

# Spring配置
spring:
{% if config.tech_stack.database == 'mysql' %}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://prod-db-host:3306/{{ config.name | snake_case }}_prod?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=Asia/Shanghai
    username: ${DB_USERNAME:prod_user}
    password: ${DB_PASSWORD:prod_password}
    hikari:
      minimum-idle: 10
      maximum-pool-size: 50
      connection-timeout: 60000
      idle-timeout: 600000
      max-lifetime: 1800000
{% elif config.tech_stack.database == 'postgresql' %}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://prod-db-host:5432/{{ config.name | snake_case }}_prod
    username: ${DB_USERNAME:prod_user}
    password: ${DB_PASSWORD:prod_password}
    hikari:
      minimum-idle: 10
      maximum-pool-size: 50
      connection-timeout: 60000
      idle-timeout: 600000
      max-lifetime: 1800000
{% endif %}
{% if 'redis' in config.tech_stack.cache %}
  redis:
    host: ${REDIS_HOST:prod-redis-host}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0
    timeout: 10000
    lettuce:
      pool:
        max-active: 20
        max-wait: -1
        max-idle: 10
        min-idle: 5
{% endif %}
{% if 'rabbitmq' in config.tech_stack.mq %}
  rabbitmq:
    host: ${RABBITMQ_HOST:prod-rabbitmq-host}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:prod_user}
    password: ${RABBITMQ_PASSWORD:prod_password}
    virtual-host: ${RABBITMQ_VHOST:/}
{% endif %}
{% if 'kafka' in config.tech_stack.mq %}
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:prod-kafka-host:9092}
    producer:
      retries: 5
      batch-size: 32768
      buffer-memory: 67108864
    consumer:
      group-id: {{ config.name | snake_case }}-prod-group
{% endif %}
{% if 'mongodb' in config.tech_stack.nosql %}
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://prod-mongo-host:27017/{{ config.name | snake_case }}_prod}
{% endif %}
{% if 'elasticsearch' in config.tech_stack.nosql %}
  elasticsearch:
    rest:
      uris: ${ELASTICSEARCH_URIS:http://prod-es-host:9200}
{% endif %}

# 日志配置
logging:
  level:
    root: warn
    {{ config.package }}: info
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'
  file:
    name: /var/log/{{ config.name }}/{{ config.name }}-prod.log
    max-size: 500MB
    max-history: 90

# Swagger配置（生产环境建议关闭）
{% if 'swagger' in config.tech_stack.docs %}
swagger:
  enabled: false
{% endif %}

# Actuator配置
{% if 'actuator' in config.tech_stack.monitor %}
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
{% endif %}

# 自定义配置
{{ config.name | snake_case }}:
  # 生产环境配置
  debug: false
  # 文件上传配置
  upload:
    base-dir: /var/uploads/{{ config.name }}
    max-size: 52428800  # 50MB
  # 线程池配置
  thread-pool:
    core-size: 20
    max-size: 50
    queue-capacity: 1000
    keep-alive-seconds: 300
  # 安全配置
  security:
    jwt:
      secret: ${JWT_SECRET:{{ config.name | snake_case }}_prod_jwt_secret_key_change_me}
      expiration: 43200000  # 12小时