<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wshoto.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="UserResultMap" type="com.wshoto.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="full_name" property="fullName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <!-- 查询所有用户 -->
    <select id="findAll" resultMap="UserResultMap">
        SELECT id, username, email, password, full_name, created_at, updated_at
        FROM users
        ORDER BY created_at DESC
    </select>

    <!-- 根据ID查询用户 -->
    <select id="findById" parameterType="long" resultMap="UserResultMap">
        SELECT id, username, email, password, full_name, created_at, updated_at
        FROM users
        WHERE id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="findByUsername" parameterType="string" resultMap="UserResultMap">
        SELECT id, username, email, password, full_name, created_at, updated_at
        FROM users
        WHERE username = #{username}
    </select>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.wshoto.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, email, password, full_name, created_at, updated_at)
        VALUES (#{username}, #{email}, #{password}, #{fullName}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.wshoto.entity.User">
        UPDATE users
        SET username = #{username},
            email = #{email},
            password = #{password},
            full_name = #{fullName},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM users WHERE id = #{id}
    </delete>

</mapper>